# -*- coding: utf-8 -*-
"""Stock Price prediction (APPLE STOCKS).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QGQnsX5OO7xzlNwTY40DsEqP44ShV-B-
"""

#Installing the dependencies
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression #ML dependency that contains lots of ML libraries.
from sklearn.svm import SVR #SupportVectorRegressor
import matplotlib.pyplot as plt

#Load the data
from google.colab import files # Use to load data on Google Colab
uploaded = files.upload() # Use to load data on Google Colab
df = pd.read_csv('AAPL1.csv')
df.head(7)

#Create the lists X and Y data sets
dates = []
prices = []

#Get the number of rows and columns in the data set
df.shape

#Displaying Last row
df.tail(1)

df = df.head(len(df)-1)
df

#To check whether the last row is omitted or not
df.shape

#Get all of the rows from the Date Column
df_dates = df.loc[:, 'Date']
#Get all of the rows from the Open Column
df_open = df.loc[:, 'Open']

#Create the independent data set X
for date in df_dates:
  dates.append( [int(date.split('-')[2])])
  
#Create the dependent data se 'y'
for open_price in df_open:
  prices.append(float(open_price))

#Printing all the dates in the updated date list
print(df_dates)

#Create the independent data set X
for date in df_dates:
  dates.append( [int(date.split('-')[2])])
  
#Create the dependent data se 'y'
for open_price in df_open:
  prices.append(float(open_price))

print(dates)

def predict_prices(dates, prices, x):
  
  #Creaing the 3 SVR models
  svr_lin = SVR(kernel='linear', C= 1e3)
  svr_poly= SVR(kernel='poly', C=1e3, degree=2)
  svr_rbf = SVR(kernel='rbf', C=1e3, gamma=0.1)
  
  #Training the SVR models 
  svr_lin.fit(dates,prices)
  svr_poly.fit(dates,prices)
  svr_rbf.fit(dates,prices)
  
  #Creating the Linear Regression model
  lin_reg = LinearRegression()
  #Training the Linear Regression model
  lin_reg.fit(dates,prices)
  
  #Plot the models on a graph to see which has the best fit
  plt.scatter(dates, prices, color='black', label='Data')
  plt.plot(dates, svr_rbf.predict(dates), color='red', label='SVR RBF')
  plt.plot(dates, svr_poly.predict(dates), color='blue', label='SVR Poly')
  plt.plot(dates, svr_lin.predict(dates), color='green', label='SVR Linear')
  plt.plot(dates, lin_reg.predict(dates), color='orange', label='Linear Reg')
  plt.xlabel('Days')
  plt.ylabel('Price')
  plt.title('Regression')
  plt.legend()
  plt.show()
  
  return svr_rbf.predict(x)[0], svr_lin.predict(x)[0],svr_poly.predict(x)[0],lin_reg.predict(x)[0]

#Predict the price of Apple on 09 April
predicted_price = predict_prices(dates, prices, [[9]])
print(predicted_price)